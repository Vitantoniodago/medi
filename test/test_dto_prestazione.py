# coding: utf-8

"""
    MediHome-CloudServer

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.dto_prestazione import DTOPrestazione

class TestDTOPrestazione(unittest.TestCase):
    """DTOPrestazione unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DTOPrestazione:
        """Test DTOPrestazione
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DTOPrestazione`
        """
        model = DTOPrestazione()
        if include_optional:
            return DTOPrestazione(
                id_prestazione = 56,
                id_prestazione_planning = 56,
                id_equipe = 56,
                id_pai = 56,
                id_frequenza = 56,
                durata = 1.337,
                codice = '',
                descrizione = '',
                assistito = '',
                inizio_prestazione = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                fine_prestazione = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                note_prestazione = '',
                id_assistito = 56,
                durata_prestazione = 56,
                id_modalita_ora_prestazione = 56,
                modelli = [
                    openapi_client.models.dto_item_prestazioni.DTOItemPrestazioni(
                        id_item_prestazione = 56, 
                        id_prestazione = 56, 
                        time_start = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        time_end = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        lunedi = True, 
                        martedi = True, 
                        mercoledi = True, 
                        giovedi = True, 
                        venerdi = True, 
                        sabato = True, 
                        domenica = True, )
                    ],
                effettuata = True,
                modelli_parziali = [
                    openapi_client.models.dto_modello_parziale.DTOModelloParziale(
                        time_start = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        time_end = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        settimana = [
                            True
                            ], 
                        gg_settimana = 56, )
                    ],
                note_tipologia_accessi = '',
                struttura_erogante = ''
            )
        else:
            return DTOPrestazione(
        )
        """

    def testDTOPrestazione(self):
        """Test DTOPrestazione"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
