# coding: utf-8

"""
    MediHome-CloudServer

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.dtosvic_debitore_post import DTOSVICDebitorePOST

class TestDTOSVICDebitorePOST(unittest.TestCase):
    """DTOSVICDebitorePOST unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DTOSVICDebitorePOST:
        """Test DTOSVICDebitorePOST
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DTOSVICDebitorePOST`
        """
        model = DTOSVICDebitorePOST()
        if include_optional:
            return DTOSVICDebitorePOST(
                codice_debitore = '',
                tipo_anagrafica = '',
                ragione_sociale = '',
                cognome = '',
                nome = '',
                sesso = '',
                data_nascita = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                localit_nascita = '',
                provincia_nascita = '',
                partita_iva = '',
                codice_fiscale = '',
                indirizzo = '',
                localit = '',
                cap = '',
                provincia = '',
                email = '',
                telefono = ''
            )
        else:
            return DTOSVICDebitorePOST(
        )
        """

    def testDTOSVICDebitorePOST(self):
        """Test DTOSVICDebitorePOST"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
