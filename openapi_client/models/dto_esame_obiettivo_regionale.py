# coding: utf-8

"""
    MediHome-CloudServer

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Any, ClassVar, Dict, List, Optional
from pydantic import BaseModel, StrictInt, StrictStr
from pydantic import Field
try:
    from typing import Self
except ImportError:
    from typing_extensions import Self

class DTOEsameObiettivoRegionale(BaseModel):
    """
    
    """ # noqa: E501
    id_assistito: Optional[StrictInt] = Field(default=None, description="Richiedi o modifica identifier assistito.", alias="IDAssistito")
    id_esame_obiettivo_regionale: Optional[StrictInt] = Field(default=None, description="Richiedi o modifica identifier esame obiettivo regionale.", alias="IDEsameObiettivoRegionale")
    idmv_polmone_destro: Optional[StrictStr] = Field(default=None, description="Richiedi o modifica idmv polmone destro.", alias="IDMVPolmoneDestro")
    idfvt_polmone_destro: Optional[StrictStr] = Field(default=None, description="Richiedi o modifica idfvt polmone destro.", alias="IDFVTPolmoneDestro")
    id_percussione_polmone_destro: Optional[StrictStr] = Field(default=None, description="Richiedi o modifica identifier percussione polmone destro.", alias="IDPercussionePolmoneDestro")
    id_rumori_patologici_polmone_destro: Optional[StrictStr] = Field(default=None, description="Richiedi o modifica identifier rumori patologici polmone destro.", alias="IDRumoriPatologiciPolmoneDestro")
    id_sede_polmone_destro: Optional[StrictStr] = Field(default=None, description="Richiedi o modifica identifier sede polmone destro.", alias="IDSedePolmoneDestro")
    idmv_polmone_sinistro: Optional[StrictStr] = Field(default=None, description="Richiedi o modifica idmv polmone sinistro.", alias="IDMVPolmoneSinistro")
    idfvt_polmone_sinistro: Optional[StrictStr] = Field(default=None, description="Richiedi o modifica idfvt polmone sinistro.", alias="IDFVTPolmoneSinistro")
    id_percussione_polmone_sinistro: Optional[StrictStr] = Field(default=None, description="Richiedi o modifica identifier percussione polmone sinistro.", alias="IDPercussionePolmoneSinistro")
    id_rumori_patologici_polmone_sinistro: Optional[StrictStr] = Field(default=None, description="Richiedi o modifica identifier rumori patologici polmone sinistro.", alias="IDRumoriPatologiciPolmoneSinistro")
    id_sede_polmone_sinistro: Optional[StrictStr] = Field(default=None, description="Richiedi o modifica identifier sede polmone sinistro.", alias="IDSedePolmoneSinistro")
    id_tono: Optional[StrictStr] = Field(default=None, description="Richiedi o modifica identifier tono.", alias="IDTono")
    id_soffi: Optional[StrictStr] = Field(default=None, description="Richiedi o modifica identifier soffi.", alias="IDSoffi")
    id_apparato_urogenitale: Optional[StrictStr] = Field(default=None, description="Richiedi o modifica identifier apparato urogenitale.", alias="IDApparatoUrogenitale")
    id_addome: Optional[StrictStr] = Field(default=None, description="Richiedi o modifica identifier addome.", alias="IDAddome")
    id_occhi: Optional[StrictInt] = Field(default=None, alias="IDOcchi")
    id_vista: Optional[StrictInt] = Field(default=None, alias="IDVista")
    note_vista: Optional[StrictStr] = Field(default=None, alias="NoteVista")
    id_cavo_orale: Optional[StrictInt] = Field(default=None, alias="IDCavoOrale")
    orecchio: Optional[StrictStr] = Field(default=None, alias="Orecchio")
    id_udito: Optional[StrictInt] = Field(default=None, alias="IDUdito")
    note_udito: Optional[StrictStr] = Field(default=None, alias="NoteUdito")
    id_collo: Optional[StrictInt] = Field(default=None, alias="IDCollo")
    sistema_arterioso: Optional[StrictStr] = Field(default=None, alias="SistemaArterioso")
    sistema_venoso_linfatico: Optional[StrictStr] = Field(default=None, alias="SistemaVenosoLinfatico")
    apparato_muscolo_scheletrico: Optional[StrictStr] = Field(default=None, alias="ApparatoMuscoloScheletrico")
    alterazione_podologica: Optional[StrictStr] = Field(default=None, alias="AlterazionePodologica")
    id_tono_sistema_nervoso: Optional[StrictInt] = Field(default=None, alias="IDTonoSistemaNervoso")
    note_tono_sistema_nervoso: Optional[StrictStr] = Field(default=None, alias="NoteTonoSistemaNervoso")
    id_movimenti: Optional[StrictInt] = Field(default=None, alias="IDMovimenti")
    id_visita: Optional[StrictInt] = Field(default=None, alias="IDVisita")
    __properties: ClassVar[List[str]] = ["IDAssistito", "IDEsameObiettivoRegionale", "IDMVPolmoneDestro", "IDFVTPolmoneDestro", "IDPercussionePolmoneDestro", "IDRumoriPatologiciPolmoneDestro", "IDSedePolmoneDestro", "IDMVPolmoneSinistro", "IDFVTPolmoneSinistro", "IDPercussionePolmoneSinistro", "IDRumoriPatologiciPolmoneSinistro", "IDSedePolmoneSinistro", "IDTono", "IDSoffi", "IDApparatoUrogenitale", "IDAddome", "IDOcchi", "IDVista", "NoteVista", "IDCavoOrale", "Orecchio", "IDUdito", "NoteUdito", "IDCollo", "SistemaArterioso", "SistemaVenosoLinfatico", "ApparatoMuscoloScheletrico", "AlterazionePodologica", "IDTonoSistemaNervoso", "NoteTonoSistemaNervoso", "IDMovimenti", "IDVisita"]

    model_config = {
        "populate_by_name": True,
        "validate_assignment": True,
        "protected_namespaces": (),
    }


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of DTOEsameObiettivoRegionale from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        _dict = self.model_dump(
            by_alias=True,
            exclude={
            },
            exclude_none=True,
        )
        return _dict

    @classmethod
    def from_dict(cls, obj: Dict) -> Self:
        """Create an instance of DTOEsameObiettivoRegionale from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "IDAssistito": obj.get("IDAssistito"),
            "IDEsameObiettivoRegionale": obj.get("IDEsameObiettivoRegionale"),
            "IDMVPolmoneDestro": obj.get("IDMVPolmoneDestro"),
            "IDFVTPolmoneDestro": obj.get("IDFVTPolmoneDestro"),
            "IDPercussionePolmoneDestro": obj.get("IDPercussionePolmoneDestro"),
            "IDRumoriPatologiciPolmoneDestro": obj.get("IDRumoriPatologiciPolmoneDestro"),
            "IDSedePolmoneDestro": obj.get("IDSedePolmoneDestro"),
            "IDMVPolmoneSinistro": obj.get("IDMVPolmoneSinistro"),
            "IDFVTPolmoneSinistro": obj.get("IDFVTPolmoneSinistro"),
            "IDPercussionePolmoneSinistro": obj.get("IDPercussionePolmoneSinistro"),
            "IDRumoriPatologiciPolmoneSinistro": obj.get("IDRumoriPatologiciPolmoneSinistro"),
            "IDSedePolmoneSinistro": obj.get("IDSedePolmoneSinistro"),
            "IDTono": obj.get("IDTono"),
            "IDSoffi": obj.get("IDSoffi"),
            "IDApparatoUrogenitale": obj.get("IDApparatoUrogenitale"),
            "IDAddome": obj.get("IDAddome"),
            "IDOcchi": obj.get("IDOcchi"),
            "IDVista": obj.get("IDVista"),
            "NoteVista": obj.get("NoteVista"),
            "IDCavoOrale": obj.get("IDCavoOrale"),
            "Orecchio": obj.get("Orecchio"),
            "IDUdito": obj.get("IDUdito"),
            "NoteUdito": obj.get("NoteUdito"),
            "IDCollo": obj.get("IDCollo"),
            "SistemaArterioso": obj.get("SistemaArterioso"),
            "SistemaVenosoLinfatico": obj.get("SistemaVenosoLinfatico"),
            "ApparatoMuscoloScheletrico": obj.get("ApparatoMuscoloScheletrico"),
            "AlterazionePodologica": obj.get("AlterazionePodologica"),
            "IDTonoSistemaNervoso": obj.get("IDTonoSistemaNervoso"),
            "NoteTonoSistemaNervoso": obj.get("NoteTonoSistemaNervoso"),
            "IDMovimenti": obj.get("IDMovimenti"),
            "IDVisita": obj.get("IDVisita")
        })
        return _obj


